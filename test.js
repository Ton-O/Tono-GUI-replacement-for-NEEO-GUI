var Discovered = [ {ip:undefined}, {ip:'192.168.0.2'},  {ip:'192.168.0.46'},  {ip:'192.168.0.32'}, {ip:'192.168.0.22'},  {ip:'192.168.0.66'},  {ip:'192.168.0.17'},  {ip:'192.168.0.36'},  {ip:'192.168.0.4'},  {ip:'192.168.0.6'}, {ip: '999.999.999.999'}, {ip:'192.168.0.12'},  {ip:'192.168.0.41'},  {ip:'192.168.0.150'},  {ip:'192.168.0.20'},  {ip:'192.168.0.40'},  {ip:'192.168.0.25'},  {ip:'192.168.0.31'},  {ip:'192.168.0.48'},  {ip:'192.168.0.47'},  {ip:'192.168.0.16'},  {ip:'192.168.0.50'},  {ip:'192.168.0.11'}];
//var Result = eval(Discovered.sort((a, b) => {const num1 = Number(a.split(\".\").map((num) => (`000${num}`).slice(-3) ).join(\"\"));const num2 = Number(b.split(\".\").map((num) => (`000${num}`).slice(-3) ).join(\"\"));return num1-num2;}) ;for (var i=1;i<Discovered.length;i++) {console.log(Discovered[i].ip);if (Discovered[i].ip==undefined||Discovered[i-1].ip==Discovered[i].ip) {Discovered.splice(i, 1)}})
var Result = eval("if (Discovered[0].ip==undefined) Discovered.splice(0, 1);for (var i=1;i<Discovered.length;i++) {if (Discovered[i].ip==undefined||Discovered[i-1].ip==Discovered[i].ip) {console.log(\"Need to splice at\",i);Discovered.splice(i, 1)}};Discovered.sort((a, b) => {return a.ip.split('.')[0] - b.ip.split('.')[0] || a.ip.split('.')[1] - b.ip.split('.')[1] || a.ip.split('.')[2] - b.ip.split('.')[2] || a.ip.split('.')[3] - b.ip.split('.')[3]}) ;Discovered")
//;for (var i=1;i<Discovered.length;i++) {console.log(Discovered[i].ip);if (Discovered[i].ip==undefined||Discovered[i-1].ip==Discovered[i].ip) {Discovered.splice(i, 1)}}
console.log(Result)